<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".xaml" #>
<#@ include file="..\..\CommonTableTemplate\CommonTableTemplate.tt"#>
<#
    string EntityKey = "EntityId";
    string EntityKeyParameter = "entityId";
    string EntityName = "Entity";
    string EntityNamePlural = "Entities";
    string EntityNameParameter = "entity";
    string EntityNamePluralParameter = "entities";
    string ListName = "EntityList";
    string ListPageName = "EntityListPage";
    string ListPageViewModelName = "EntityListPageViewModel";
    string DetailName = "EntityDetail";
    string DetailPageName = "EntityDetailPage";

    string EntityTablename = "Entity";

    Table table = database.Tables[EntityTablename];
    table.Refresh();
#>
<prism:VisualStateAwarePage 
    x:Name="pageRoot"
    x:Class="<#= UILayerViewsNamespace #>.<#= EntityName #>ListPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:<#= UILayerViewsNamespace #>"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="using:Microsoft.Practices.Prism.StoreApps"
    xmlns:beh="using:<#= UILayerBehaviorsNamespace #>"
    mc:Ignorable="d"
    prism:ViewModelLocator.AutoWireViewModel="True">

    <prism:VisualStateAwarePage.Resources>
        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName"><#= ListPageName #></x:String>
        <Style x:Key="<#= DetailName #>AppBarButtonStyle"
               TargetType="ButtonBase"
               BasedOn="{StaticResource AppBarButtonStyle}">
            <Setter Property="AutomationProperties.AutomationId"
                    Value="<#= DetailName #>BarButton" />
            <Setter Property="AutomationProperties.Name"
                    Value="<#= DetailName #>" />
            <Setter Property="Content"
                    Value="&#xE109;" />
        </Style>
    </prism:VisualStateAwarePage.Resources>
    <Page.TopAppBar>
        <AppBar>
            <StackPanel Orientation="Horizontal">
                <Button Command="{Binding <#= DetailName #>NavCommand}"
                        Style="{StaticResource <#= DetailName #>AppBarButtonStyle}" />
            </StackPanel>
        </AppBar>
    </Page.TopAppBar>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton"
                    Click="GoBack"
                    IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}"
                    Style="{StaticResource BackButtonStyle}" />
            <TextBlock x:Name="pageTitle"
                       Grid.Column="1"
                       Text="{StaticResource AppName}"
                       Style="{StaticResource PageHeaderTextStyle}" />
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>

			<ScrollViewer>
				<GridView Margin="120,10,0,0"
					  Grid.Row="0"
					  ItemsSource="{Binding <#= ListName #>}"
					  beh:ItemClickToCommandBehavior.Command="{Binding NavCommand}"
					  SelectionMode="None"
					  IsItemClickEnabled="True">
					<GridView.Transitions>
						<TransitionCollection>
							<AddDeleteThemeTransition/>
						</TransitionCollection>
					</GridView.Transitions>
					<GridView.ItemContainerTransitions>
						<TransitionCollection>
							<EntranceThemeTransition FromHorizontalOffset="1250"/>
						</TransitionCollection>
					</GridView.ItemContainerTransitions>
					<GridView.ItemTemplate>
						<DataTemplate>
							<StackPanel Margin="2">
<#
PushIndent("\t\t\t\t\t\t\t");
foreach (Column column in table.Columns)
{
        WriteLine(string.Format(@"<TextBlock Text=""{{Binding Path={0}}}"" />", column.Name));
}  
PopIndent();
#>
							</StackPanel>
						</DataTemplate>
					</GridView.ItemTemplate>
				</GridView>
			</ScrollViewer>
        </Grid>
        
        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape" />
                <VisualState x:Name="Filled" />

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton"
                                                       Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="{StaticResource PortraitBackButtonStyle}" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton"
                                                       Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="{StaticResource SnappedBackButtonStyle}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle"
                                                       Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="{StaticResource SnappedPageHeaderTextStyle}" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</prism:VisualStateAwarePage>
